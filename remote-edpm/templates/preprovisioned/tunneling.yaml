apiVersion: dataplane.openstack.org/v1beta1
kind: OpenStackDataPlaneService
metadata:
  name: tunneling
spec:
  playbookContents: |
    - hosts: all
      strategy: linear
      tasks:
        - name: Enable podified-repos
          become: true
          ansible.builtin.shell: |
            set -euxo pipefail

            SCRIPT_FILE="/usr/local/bin/${TUN_NAME}.sh"
            cat <<EOF > "/tmp/${TUN_NAME}.sh"
            #!/bin/bash
            set -ex
            if [ -n "${JUMP_BOX}" ]; then
                sshuttle -D --pidfile="/tmp/sshuttle.pid" -r "${REMOTE_SSH_USER}@localhost" -e "ssh -p 9000 -i /home/${SSH_USER}/.ssh/rhoso_geneve" ${TUN_IP}/32
            fi
            ovs-vsctl --may-exist add-port {{ neutron_physical_bridge_name }} ${TUN_NAME} -- set interface ${TUN_NAME} mtu_request=${MTU} type=geneve options:remote_ip=${TUN_IP} options:key=${GNV_ID}
            EOF

            chmod +x "/tmp/${TUN_NAME}.sh"
            sudo mv "/tmp/${TUN_NAME}.sh" "${SCRIPT_FILE}"
            sudo chown root:root "${SCRIPT_FILE}"
            sudo /sbin/restorecon -v "${SCRIPT_FILE}"

            cat <<EOF > "/etc/systemd/system/${TUN_NAME}.service"
            [Unit]
            Description=Create ${TUN_NAME} bridge
            Requires=network-online.target
            After=network-online.target
            [Service]
            ExecStart=${SCRIPT_FILE}
            RemainAfterExit=true
            Type=oneshot
            [Install]
            WantedBy=multi-user.target edpm_ovn_controller.service
            EOF

            systemctl enable --now "${TUN_NAME}.service"

            sed -i 's/nameserver ${DNS_SERVER}//g' /etc/resolv.conf

            systemctl restart edpm_ovn_controller
            # ovn_metadata container is not present yet
            # systemctl restart edpm_ovn_metadata_agent
